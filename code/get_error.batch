set.current(inputdir=data/mothur, outputdir=data/mothur)
get.groups(count=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table, fasta=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, taxonomy=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, groups=mock)
rename.file(input=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, new=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.mock.fasta)
rename.file(input=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, new=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.mock.count_table)
rename.file(input=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy, new=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.mock.taxonomy)
seq.error(fasta=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.mock.fasta, count=broiler_gos.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.mock.count_table, reference=data/references/nupos.fasta, aligned=F)